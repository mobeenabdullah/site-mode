// Colors

// Base variables
$open-sans: 'Open Sans', sans-serif !default;
$base-black: #000000 !default;
$base-white: #ffffff !default;
$base-border: #f5f5f5 !default;
$base-text-color: #141414 !default;

// Template One
$template-one-primary-color: #E5792B !default;
$template-one-secondary-color: #141414 !default;
$template-one-text-color: #707070 !default;

// Template Two
$template-two-primary-color: #6FB644 !default;
$template-two-secondary-color: #141414 !default;
$template-two-text-color: #707070 !default;

// Template Three
$template-three-primary-color: #294F97 !default;
$template-three-secondary-color: #141414 !default;
$template-three-text-color: #707070 !default;

// Template Foure
$template-four-primary-color: #db3529 !default;
$template-four-secondary-color: #141414 !default;
$template-four-text-color: #707070 !default;

$colors: (
    'base-black-color': $base-black,
    'base-white-color': $base-white,
    'base-open-sans': $open-sans,
    'base-border-color': $base-border,
    'base-text-color': $base-text-color,

    'template-one-primary-color': $template-one-primary-color,
    'template-one-secondary-color': $template-one-secondary-color,
    'template-one-text-color': $template-one-text-color,

    'template-two-primary-color': $template-two-primary-color,
    'template-two-secondary-color': $template-two-secondary-color,
    'template-two-text-color': $template-two-text-color,

    'template-three-primary-color': $template-three-primary-color,
    'template-three-secondary-color': $template-three-secondary-color,
    'template-three-text-color': $template-three-text-color,

    'template-four-primary-color': $template-four-primary-color,
    'template-four-secondary-color': $template-four-secondary-color,
    'template-four-text-color': $template-four-text-color,
);

// Mixin for font-size, font-weight, line-height, text-align
@mixin font_mixin($size, $weight, $line-height, $text-align) {
  @if $size {
    font-size: $size;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $line-height {
    line-height: $line-height;
  }
  @if $text-align {
    text-align: $text-align;
  }
}

// Mixin for positioning
@mixin position_mixin($position, $top, $right, $bottom, $left) {
  @if $position {
    position: $position;
  }
  @if $top {
    top: $top;
  }
  @if $right {
    right: $right;
  }
  @if $bottom {
    bottom: $bottom;
  }
  @if $left {
    left: $left;
  }
}

// Mixin for Width and Height
@mixin width_height_mixin($width, $height) {
  @if $width and $height {
    width: $width;
    height: $height;
  }
}

// Mixin for basic flex
@mixin flex_mixin($display, $x, $y, $direction, $gap) {
  display: $display;
  align-items: $y;
  justify-content: $x;
  flex-direction: $direction;
  gap: $gap;
}

// Mixin for grid
$grid-template-row: 'row';
$grid-template-column: 'column';
$grid-equal-cols: 'equal_cols';
$grid-equal-rows: 'equal_rows';


@mixin grid_mixin($no_of_col_row, $gap) {
  // Generate equal rows
  @if $grid-equal-rows == 'equal_rows' {
    display: grid;
    grid-template-rows: repeat($no_of_col_row, 1fr);
    grid-gap: $gap;
  }

  @if $grid-equal-cols == 'equal_cols' {
    display: grid;
    grid-template-column: repeat($no_of_col_row, 1fr);
    grid-gap: $gap;
  }

  @if $grid-template-row == 'row' {
    display: grid;
    grid-template-#{$no_of_col_row}: auto 1fr auto;
    grid-gap: $gap;
  }
}





